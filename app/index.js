// Generated by CoffeeScript 1.9.1
'use strict';
var chalk, yeoman, yosay;

yeoman = require('yeoman-generator');

chalk = require('chalk');

yosay = require('yosay');

module.exports = yeoman.generators.Base.extend({
  initializing: function() {
    return this.pkg = require('../package.json');
  },
  prompting: function() {
    var done, prompts;
    done = this.async();
    this.log(yosay('Yo ! Ready to get lazy ? relax and enjoy your \'' + chalk.red('Icecream') + '\' generator!'));
    prompts = [
      {
        type: 'checkbox',
        name: 'server',
        message: 'old school ?',
        choices: [
          {
            name: 'nodejs',
            value: 'node',
            checked: true
          }, {
            name: 'apache',
            value: 'apache',
            checked: false
          }
        ]
      }, {
        type: 'checkbox',
        name: 'styles',
        message: 'What more would you like?',
        choices: [
          {
            name: 'stylus',
            value: 'server-stylus',
            checked: true
          }, {
            name: 'sass',
            value: 'server-sass',
            checked: false
          }, {
            name: 'less',
            value: 'server-less',
            checked: false
          }
        ]
      }, {
        type: 'confirm',
        name: 'someOption',
        message: 'Would you like to enable this option?',
        "default": true
      }
    ];
    return this.prompt(prompts, (function(_this) {
      return function(props) {
        _this.someOption = props.someOption;
        return done();
      };
    })(this));
  },
  writing: {
    app: function() {
      this.fs.copy(this.templatePath('_package.json'), this.destinationPath('package.json'));
      return this.fs.copy(this.templatePath('_bower.json'), this.destinationPath('bower.json'));
    },
    projectfiles: function() {
      this.fs.copy(this.templatePath('editorconfig'), this.destinationPath('.editorconfig'));
      return this.fs.copy(this.templatePath('jshintrc'), this.destinationPath('.jshintrc'));
    }
  },
  install: function() {
    return this.installDependencies({
      skipInstall: this.options['skip-install']
    });
  }
});
